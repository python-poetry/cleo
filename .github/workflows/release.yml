name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:

  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Get tag
      id: tag
      run: |
        echo tag=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install and set up Poetry
      run: |
        curl -sL https://install.python-poetry.org | python - -y

    - name: Update PATH
      shell: bash
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build distributions
      run: |
        poetry build -vvv

    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v3
      with:
        name: project-dist
        path: dist

  Publish:
    needs: [Build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get tag
        id: tag
        run: |
          echo tag=${GITHUB_REF#refs/tags/} >> $GITHUB_OUTPUT

      - name: Download distribution artifact
        uses: actions/download-artifact@master
        with:
          name: project-dist
          path: dist

      - name: Install and set up Poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y

      - name: Update PATH
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Check distributions
        run: |
          ls -la dist

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
