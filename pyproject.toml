[build-system]
requires = ["poetry-core>=2.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "cleo"
version = "3.0.0.dev0"
description = "Cleo allows you to create beautiful and testable command-line interfaces."
requires-python = ">=3.9"
authors = [
    { name = "SÃ©bastien Eustace", email = "sebastien@eustace.io" }
]
maintainers = [
    { name = "Bartosz Sokorski", email = "b.sokorski@gmail.com" },
    { name = "Branch Vincent", email = "branchvincent@gmail.com" }
]
license = { text = "MIT" }
readme = "README.md"
keywords = ["cli", "commands"]
dynamic = ["classifiers"]

[project.urls]
Repository = "https://github.com/python-poetry/cleo"

[tool.poetry]
requires-poetry = ">=2.0"
packages = [{ include = "cleo", from = "src" }]
include = [{ path = "tests", format = "sdist" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.5"
pre-commit = "^3.0"
pytest = "^8.0.0"
pytest-cov = "^4.0"
pytest-mock = "^3.8.2"
towncrier = ">=22.12.0"

[tool.poetry.group.doc.dependencies]
sphinx = "^7.1"
furo = "^2023.9.10"

[tool.ruff]
fix = true
target-version = "py39"
line-length = 88
extend-exclude = [
    "docs/*",
    "tests/fixtures/exceptions/*"
]

[tool.ruff.lint]
ignore = [
    "ISC001", # prevent conflicts with the formatter
]
unfixable = [
    "ERA",    # do not autoremove commented out code
]
extend-select = [
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "ERA",    # flake8-eradicate/eradicate
    "I",      # isort
    "N",      # pep8-naming
    "PIE",    # flake8-pie
    "PGH",    # pygrep
    "PTH",    # flake8-use-pathlib
    "ISC",    # flake8-implicit-string-concat
    "RET",    # flake8-return
    "FLY",    # flynt
    "PERF",   # perflint
    "RUF",    # ruff checks
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["cleo"]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
strict = true
files = ["src", "tests"]
pretty = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

[tool.coverage.report]
omit = [
  "src/cleo/_compat.py",
]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError"
]

[tool.towncrier]
package = "cleo"
filename = "CHANGELOG.md"
issue_format = "([#{issue}](https://github.com/python-poetry/cleo/pull/{issue}))"
directory = "news/"
title_format = "{version} ({project_date})"
template = "news/news_template.jinja2"
underlines = "-~^"
start_string = "<!-- news notes entrypoint -->\n"

[tool.towncrier.fragment.break]
name = "Breaking Changes"
showcontent = true

[tool.towncrier.fragment.feat]
name = "Features & Improvements"
showcontent = true

[tool.towncrier.fragment.bugfix]
name = "Bug Fixes"
showcontent = true

[tool.towncrier.fragment.docs]
name = "Documentation"
showcontent = true

[tool.towncrier.fragment.deps]
name = "Dependencies"
showcontent = true

[tool.towncrier.fragment.removal]
name = "Removals and Deprecations"
showcontent = true

[tool.towncrier.fragment.misc]
name = "Miscellaneous"
showcontent = true
