[tool.poetry]
name = "cleo"
version = "1.0.0b1"
description = "Cleo allows you to create beautiful and testable command-line interfaces."
authors = [
    "SÃ©bastien Eustace <sebastien@eustace.io>"
]
license = "MIT"

readme = "README.md"

repository = "https://github.com/python-poetry/cleo"

keywords = ["cli", "commands"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
]

# Requirements
[tool.poetry.dependencies]
python = "^3.7"
crashtest = "^0.3.1"
rapidfuzz = "^2.2.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-mock = "^3.8.2"
pre-commit = "^2.20.0"
pytest-cov = "^3.0.0"
tox = "^3.25.1"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
lines_after_imports = 2
lines_between_types = 1
src_paths = ["cleo", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "cleo"

[tool.mypy]
strict = true
files = "cleo, tests"

# The following whitelist is used to allow for incremental adoption
# of Mypy. Modules should be removed from this whitelist as and when
# their respective type errors have been addressed. No new modules
# should be added to this whitelist.

[[tool.mypy.overrides]]
module = [
    "cleo._utils",
    "cleo.application",
    "cleo.descriptors.application_description",
    "cleo.descriptors.text_descriptor",
    "cleo.commands.command",
    "cleo.commands.completions_command",
    "cleo.commands.help_command",
    "cleo.commands.list_command",
    "cleo.events.event_dispatcher",
    "cleo.io.buffered_io",
    "cleo.io.inputs.argument",
    "cleo.io.inputs.argv_input",
    "cleo.io.inputs.definition",
    "cleo.io.inputs.input",
    "cleo.io.inputs.token_parser",
    "cleo.io.outputs.stream_output",
    "cleo.testers.application_tester",
    "cleo.testers.command_tester",
    "cleo.ui.choice_question",
    "cleo.ui.confirmation_question",
    "cleo.ui.exception_trace",
    "cleo.ui.progress_bar",
    "cleo.ui.progress_indicator",
    "cleo.ui.question",
    "cleo.ui.table",
    "tests.events.test_event_dispatcher",
    "tests.events.test_event",
    "tests.io.inputs.test_argument",
    "tests.io.inputs.test_argv_input",
    "tests.io.inputs.test_option",
    "tests.io.inputs.test_token_parser",
    "tests.io.outputs.test_section_output",
    "tests.loaders.test_factory_command_loader",
    "tests.testers.test_application_tester",
    "tests.testers.test_command_tester",
    "tests.ui.test_choice_question",
    "tests.ui.test_confirmation_question",
    "tests.ui.test_exception_trace",
    "tests.ui.test_progress_bar",
    "tests.ui.test_progress_indicator",
    "tests.ui.test_question",
    "tests.ui.test_table",
]
ignore_errors = true

[tool.coverage.report]
omit = [
  "cleo/_compat.py",
]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[build-system]
requires = ["poetry-core~=1.0"]
build-backend = "poetry.core.masonry.api"
