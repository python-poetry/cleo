[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "cleo"
version = "2.1.0.dev0"
description = "Cleo allows you to create beautiful and testable command-line interfaces."
authors = [
    "SÃ©bastien Eustace <sebastien@eustace.io>"
]
maintainers = [
    "Branch Vincent <branchevincent@gmail.com>",
    "Bartosz Sokorski <b.sokorski@gmail.com>",
]
license = "MIT"
readme = "README.md"
packages = [
    { include = "cleo", from = "src" }
]
repository = "https://github.com/python-poetry/cleo"
keywords = ["cli", "commands"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
]

# Requirements
[tool.poetry.dependencies]
python = "^3.7"
crashtest = "^0.4.1"
rapidfuzz = "^2.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-mock = "^3.8.2"
pre-commit = "^2.20.0"
pytest-cov = "^3.0.0"
mypy = "^0.990"
towncrier = ">=22.12.0"

[tool.poetry.group.doc.dependencies]
Sphinx = "^5.2.3"
sphinx-rtd-theme = "^1.0.0"

[tool.ruff]
fix = true
target-version = "py37"
line-length = 88
extend-select = [
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA",  # flake8-eradicate/eradicate
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "N",  # pep8-naming
    "RUF",  # ruff checks
]
extend-exclude = [
    "docs/*",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
lines_after_imports = 2
lines_between_types = 1
src_paths = [
    "src",
    "tests"
]
add_imports = [
    "from __future__ import annotations"
]
filter_files = true
known_first_party = "cleo"

[tool.pycln]
all = true

[tool.mypy]
strict = true
files = ["src", "tests"]
pretty = true

[tool.coverage.report]
omit = [
  "src/cleo/_compat.py",
]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError"
]

[tool.towncrier]
package = "cleo"
filename = "CHANGELOG.md"
issue_format = "([#{issue}](https://github.com/python-poetry/cleo/pull/{issue}))"
directory = "news/"
title_format = "{version} ({project_date})"
template = "news/news_template.jinja2"
underlines = "-~^"
start_string = "<!-- news notes entrypoint -->\n"

[tool.towncrier.fragment.break]
name = "Breaking Changes"
showcontent = true

[tool.towncrier.fragment.feat]
name = "Features & Improvements"
showcontent = true

[tool.towncrier.fragment.bugfix]
name = "Bug Fixes"
showcontent = true

[tool.towncrier.fragment.docs]
name = "Documentation"
showcontent = true

[tool.towncrier.fragment.deps]
name = "Dependencies"
showcontent = true

[tool.towncrier.fragment.removal]
name = "Removals and Deprecations"
showcontent = true

[tool.towncrier.fragment.misc]
name = "Miscellaneous"
showcontent = true
